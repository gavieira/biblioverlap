% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score_matching.R
\name{get_score_matches}
\alias{get_score_matches}
\title{Calculating the final score matrix and extracting the highest scoring matches}
\usage{
get_score_matches(
  db1,
  db2,
  n_threads,
  ti_penalty,
  ti_max,
  so_penalty,
  so_max,
  au_penalty,
  au_max,
  py_max,
  score_cutoff
)
}
\arguments{
\item{db1}{- First bibliographic database in the comparison}

\item{db2}{- Second bibliographic database in the comparison}

\item{n_threads}{- number of (logical) cores to be used in the matching}

\item{ti_penalty}{- penalty applied for each increment in Title's levenshtein distance}

\item{ti_max}{- max score value for Title}

\item{so_penalty}{- penalty applied for each increment in Source's levenshtein distance}

\item{so_max}{- max score value for Source}

\item{au_penalty}{- penalty applied for each increment in Author's levenshtein distance}

\item{au_max}{- max score value for Author}

\item{py_max}{- max score value for Publication Year}

\item{score_cutoff}{- minimum final score for a valid match between two documents}
}
\value{
a list containing match data
}
\description{
This function calculates each component of the score in a different score matrix, then sums those in order to obtain the final score.
Finally, it extracts the highest score match for each row of the final score matrix.
}
